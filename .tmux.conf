# set-option -g default-command "reattach-to-user-namespace -l zsh"
set -g status-right "#S"
set -g pane-border-fg white
set -g pane-border-bg black
set -g pane-active-border-fg blue
set -g base-index 1
set -g default-terminal "screen-256color"
set-option -g default-terminal "screen-256color"
set -g status-fg white
setw -g window-status-fg white
setw -g window-status-bg default
setw -g window-status-attr dim
setw -g monitor-activity on
set -g visual-activity on
bind H resize-pane -L 5
bind J resize-pane -D 5
bind K resize-pane -U 5
bind L resize-pane -R 5
bind c new-window -c "#{pane_current_path}"
set -g status-right-length 150
set -g status-right '#[fg=white] #(whoami) #H #[fg=white] %H:%M #[fg=white] %d/%m/%Y  '
set -g clock-mode-colour white
bind r source-file ~/.tmux.conf \; display-message "Config reloaded.."
set -sg escape-time 0

bind -n M-h select-pane -L
bind -n M-j select-pane -D
bind -n M-k select-pane -U
bind -n M-l select-pane -R

# Use vim keybindings in copy mode
setw -g mode-keys vi

# Setup 'v' to begin selection as in Vim
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

# Smart pane switching with awareness of vim splits
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n M-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n M-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n M-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n M-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n M-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

unbind C-b
set -g prefix C-a
bind C-a send-prefix
